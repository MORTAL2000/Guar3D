Next:
GFX::RenderCamera
 - parameterize clearcolor
 - parameterize clear modes
 - create clear modes at GFX abstraction level

ECS::Camera 
 - implement ScreenToPoint

Finish ECS::Rigidbody <-> PHY::Rigidbody interface.
 - raycast from mouse pos in Game::PlayerController. Have to compensate for projection distortion

move component::init from ecs::scenegraph::update to a callback system.
 - std::vector<initfuncptr> scenegraph::m_initlist
 - call and remove

add methods to create collision meshes from render meshes and vice versa.

parameterize primitive arg for glDraw. Currenty hard coded to triangles, but point and line have
their uses.

---------------------
Later:

Finish ECS::Rigidbody <-> PHY::Rigidbody interface.
 - implement remaining abstractions for bullet collider types (sphere, capsule, cylinder, cone, trimesh)

Finish forward renderpath
  Clean up ortho shadow caster
  Implement point light shadow caster
  Implement spotlight shadow caster

Start deferred renderpath

Add collision checks for lights, to prevent lighting through walls, reduce # of lights being
rendered etc.

Audio system. Will probably use OpenAL soft.

write lightbaking shader for static lights.

paralellize resource loading

review implementation LuaInterperter.cpp
derive LuaInterpreter for config file loading foreach system.

add projects to dependency solution for the dependencies that are missing (glew, glfw, bullet).
 - important for quickly building for different targets

implement findGameObject:
 what should the search procedure be? Iterative deepening depth-first search is preferred but Depth-first search would be easier to implement.
